---
import ArtInfo from "@/components/feat/ArtInfo.astro"
import { SongPreview } from "@/components/feat/SongPreview"
import Layout from "@/layouts/Layout.astro"
import { type ArtInfoArray } from "@/models/arte.model"
import type { GetStaticPaths } from "astro"
import { getCollection, getEntry } from "astro:content"
export const getStaticPaths = (async () => {
    const albumsQuery = await getCollection("album");

    const albumsSlugs: string[] = [];

    albumsQuery.forEach((albumQuery) => {
        albumsSlugs.push(albumQuery.data.slug);
    });

    const albumParams = albumsSlugs.map((albumQuery) => ({
        params: {
            album: albumQuery,
        },
    }));

    return albumParams;
}) satisfies GetStaticPaths;

const { album: albumParam } = Astro.params;

const albumQuery = await getEntry("album", albumParam);

const albumData = albumQuery?.data;

if (albumData == null) return;

const songsArray: ArtInfoArray = [];
const songsQuery = await getEntry(albumData.songs);

songsQuery.data.forEach((song) => {
    songsArray.push(song);
});
---

<Layout title={`${albumData?.title}'s album`}>
    <div class="flex flex-col justify-start items-center max-w-[987px] m-auto pb-24">
        <ArtInfo artData={albumData!} />
        <div class="self-stretch flex flex-col justify-start mt-1">
            <header class="self-stretch">
                <span class="font-bold text-zinc-200 text-2xl">
                    Songs ({songsArray.length})
                </span>
            </header>
            <div class="flex flex-col">
                {
                    songsArray.map((song, index) => (
                        <SongPreview index={index} songInfo={song} client:load />
                    ))
                }
            </div>
        </div>
    </div>
</Layout>
